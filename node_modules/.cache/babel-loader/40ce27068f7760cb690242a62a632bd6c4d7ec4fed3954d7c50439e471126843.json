{"ast":null,"code":"export function removeAudits(correct, possible) {\n  let finished = [];\n  let names = [];\n  let k = 0;\n  for (let i = 0; i < correct.length; i++) {\n    for (let j = 0; j < possible.length; j++) {\n      if (correct[i] === possible[j]) {\n        middleman.push(projectsData.data.user[0].transactions[j]);\n      }\n    }\n  }\n  middleman.sort();\n  middleman.reverse();\n  for (let i = 0; i < middleman.length; i++) {\n    let taskName1 = middleman[i].object.name;\n    while (k < middleman.length) {\n      let taskName2 = middleman[k].object.name;\n      if (taskName1 === taskName2) {\n        if (middleman[i].amount > middleman[k].amount) {\n          if (!names.includes(taskName1)) {\n            names.push(taskName1);\n            finished.push(middleman[i]);\n          }\n        } else if (middleman[i].amount === middleman[k].amount) {\n          if (!names.includes(taskName1)) {\n            names.push(taskName1);\n            finished.push(middleman[i]);\n          }\n        }\n      }\n      k++;\n    }\n    k = 0;\n  }\n  return finished;\n}","map":{"version":3,"names":["removeAudits","correct","possible","finished","names","k","i","length","j","middleman","push","projectsData","data","user","transactions","sort","reverse","taskName1","object","name","taskName2","amount","includes"],"sources":["/home/mannakass/kood/graphql/src/other/remove.js"],"sourcesContent":["export function removeAudits(correct, possible) {\n    let finished = [];\n    let names = [];\n    let k = 0;\n\n    for (let i = 0; i < correct.length; i++) {\n        for (let j = 0; j < possible.length; j++) {\n            if (correct[i] === possible[j]) {\n                middleman.push(projectsData.data.user[0].transactions[j])\n            }\n        }\n    }\n\n    middleman.sort();\n    middleman.reverse();\n    for (let i = 0; i < middleman.length; i++) {\n        let taskName1 = middleman[i].object.name;\n\n        while (k < middleman.length) {\n            let taskName2 = middleman[k].object.name\n\n            if (taskName1 === taskName2) {\n                if (middleman[i].amount > middleman[k].amount) {\n\n                    if (!names.includes(taskName1)) {\n                        names.push(taskName1)\n                        finished.push(middleman[i])\n                    }\n                } else if (middleman[i].amount === middleman[k].amount) {\n\n                    if (!names.includes(taskName1)) {\n                        names.push(taskName1)\n                        finished.push(middleman[i])\n                    }\n                }\n            }\n            k++\n        }\n        k = 0;\n    }\n\n    return finished\n}\n"],"mappings":"AAAA,OAAO,SAASA,YAAY,CAACC,OAAO,EAAEC,QAAQ,EAAE;EAC5C,IAAIC,QAAQ,GAAG,EAAE;EACjB,IAAIC,KAAK,GAAG,EAAE;EACd,IAAIC,CAAC,GAAG,CAAC;EAET,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,OAAO,CAACM,MAAM,EAAED,CAAC,EAAE,EAAE;IACrC,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,QAAQ,CAACK,MAAM,EAAEC,CAAC,EAAE,EAAE;MACtC,IAAIP,OAAO,CAACK,CAAC,CAAC,KAAKJ,QAAQ,CAACM,CAAC,CAAC,EAAE;QAC5BC,SAAS,CAACC,IAAI,CAACC,YAAY,CAACC,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAACC,YAAY,CAACN,CAAC,CAAC,CAAC;MAC7D;IACJ;EACJ;EAEAC,SAAS,CAACM,IAAI,EAAE;EAChBN,SAAS,CAACO,OAAO,EAAE;EACnB,KAAK,IAAIV,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGG,SAAS,CAACF,MAAM,EAAED,CAAC,EAAE,EAAE;IACvC,IAAIW,SAAS,GAAGR,SAAS,CAACH,CAAC,CAAC,CAACY,MAAM,CAACC,IAAI;IAExC,OAAOd,CAAC,GAAGI,SAAS,CAACF,MAAM,EAAE;MACzB,IAAIa,SAAS,GAAGX,SAAS,CAACJ,CAAC,CAAC,CAACa,MAAM,CAACC,IAAI;MAExC,IAAIF,SAAS,KAAKG,SAAS,EAAE;QACzB,IAAIX,SAAS,CAACH,CAAC,CAAC,CAACe,MAAM,GAAGZ,SAAS,CAACJ,CAAC,CAAC,CAACgB,MAAM,EAAE;UAE3C,IAAI,CAACjB,KAAK,CAACkB,QAAQ,CAACL,SAAS,CAAC,EAAE;YAC5Bb,KAAK,CAACM,IAAI,CAACO,SAAS,CAAC;YACrBd,QAAQ,CAACO,IAAI,CAACD,SAAS,CAACH,CAAC,CAAC,CAAC;UAC/B;QACJ,CAAC,MAAM,IAAIG,SAAS,CAACH,CAAC,CAAC,CAACe,MAAM,KAAKZ,SAAS,CAACJ,CAAC,CAAC,CAACgB,MAAM,EAAE;UAEpD,IAAI,CAACjB,KAAK,CAACkB,QAAQ,CAACL,SAAS,CAAC,EAAE;YAC5Bb,KAAK,CAACM,IAAI,CAACO,SAAS,CAAC;YACrBd,QAAQ,CAACO,IAAI,CAACD,SAAS,CAACH,CAAC,CAAC,CAAC;UAC/B;QACJ;MACJ;MACAD,CAAC,EAAE;IACP;IACAA,CAAC,GAAG,CAAC;EACT;EAEA,OAAOF,QAAQ;AACnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}