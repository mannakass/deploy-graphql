{"ast":null,"code":"var _jsxFileName = \"/home/mannakass/kood/graphql/src/components/ProfileInfo.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useGQLQuery } from '../other/useGQLQurery';\nimport { GET_USER, GET_FINISHED_PROJECTS, GET_DATE_AND_XP, GET_LEVEL } from '../other/queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet correctPaths = [];\nlet projectsData;\nfunction removeAudits(correct, possible) {\n  let middleman = [];\n  let names = [];\n  let finished = [];\n  for (let i = 0; i < correct.length; i++) {\n    for (let j = 0; j < possible.length; j++) {\n      if (correct[i] === possible[j]) {\n        middleman.push(projectsData.data.user[0].transactions[j]);\n      }\n    }\n  }\n  //console.log(middleman)\n  /*     middleman.forEach(element => {\n          let taskName = element.object.name\n          //console.log(element)\n          console.log(i + taskName)\n          if (!finished.includes(taskName)) {\n              // console.log(taskName)\n              finished.push(element)\n              console.log(finished)\n          }\n          i++\n      }) */\n\n  /*     for (let i = 0; i < middleman.length; i++) {\n          let taskName = middleman[i].object.name;\n          const proov = names.includes(taskName)\n  \n          if (!proov) {\n              names.push(taskName)\n              finished.push(middleman[i])\n          } else if (proov) {\n  \n          }\n      } */\n\n  for (let i = 0; i < middleman.length; i++) {\n    let taskName1 = middleman[i].object.name;\n    for (let k = 0; k < middleman.length; k++) {\n      let taskName2 = middleman[k].object.name;\n      if (taskName1 === taskName2) {\n        if (middleman[i].amount > middleman[k].amount) {\n          finished.push(middleman[i]);\n        } else if (middleman[i].amount > middleman[k].amount) {\n          finished.push(middleman[k]);\n        }\n      } else if (!taskName1 === taskName2) {\n        finished.push(middleman[i]);\n      }\n    }\n  }\n  console.log(finished);\n}\nfunction ProfileInfo() {\n  _s();\n  const userProfile = useGQLQuery('user', GET_USER);\n  const tasks = useGQLQuery('task', GET_FINISHED_PROJECTS);\n  projectsData = useGQLQuery('xp', GET_DATE_AND_XP);\n  const levels = useGQLQuery('level', GET_LEVEL);\n  //let totalXP = 0;\n\n  /* if you don't use isLoading it is going to throw an error */\n  if (userProfile.isLoading || tasks.isLoading || projectsData.isLoading || levels.isLoading) return \"Loading...\";\n  // if (userProfile.error) return \"An error has occurred: \" + error.message;\n\n  const addPaths = tasks.data.user[0].progresses.map(path => {\n    let proovime = path.path;\n    correctPaths.push(proovime);\n  });\n\n  //console.log(correctPaths)\n  correctPaths.map(element => {\n    //console.log(element)\n  });\n\n  /* filter out audits */\n  const possiblePaths = projectsData.data.user[0].transactions.map(project => {\n    return JSON.parse(JSON.stringify(project.path));\n  });\n  possiblePaths.map(element => {\n    // console.log(element)\n  });\n  const filterAudits = removeAudits(correctPaths, possiblePaths);\n  console.log(filterAudits);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-info\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-username-div\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: userProfile.data.user[0].login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-current-level-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Current level:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"current-level\",\n        children: levels.data.transaction[0].amount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-xp-amount\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n}\n_s(ProfileInfo, \"rARKcenYEKfnsFnjgbIeo3gORxU=\", false, function () {\n  return [useGQLQuery, useGQLQuery, useGQLQuery, useGQLQuery];\n});\n_c = ProfileInfo;\nexport default ProfileInfo;\nvar _c;\n$RefreshReg$(_c, \"ProfileInfo\");","map":{"version":3,"names":["React","useGQLQuery","GET_USER","GET_FINISHED_PROJECTS","GET_DATE_AND_XP","GET_LEVEL","correctPaths","projectsData","removeAudits","correct","possible","middleman","names","finished","i","length","j","push","data","user","transactions","taskName1","object","name","k","taskName2","amount","console","log","ProfileInfo","userProfile","tasks","levels","isLoading","addPaths","progresses","map","path","proovime","element","possiblePaths","project","JSON","parse","stringify","filterAudits","login","transaction"],"sources":["/home/mannakass/kood/graphql/src/components/ProfileInfo.js"],"sourcesContent":["import React from 'react'\nimport { useGQLQuery } from '../other/useGQLQurery'\nimport { GET_USER, GET_FINISHED_PROJECTS, GET_DATE_AND_XP, GET_LEVEL } from '../other/queries';\n\n\nlet correctPaths = [];\nlet projectsData\n\nfunction removeAudits(correct, possible) {\n\n    let middleman = [];\n    let names = [];\n    let finished = [];\n\n    for (let i = 0; i < correct.length; i++) {\n        for (let j = 0; j < possible.length; j++) {\n            if (correct[i] === possible[j]) {\n                middleman.push(projectsData.data.user[0].transactions[j])\n            }\n        }\n    }\n    //console.log(middleman)\n    /*     middleman.forEach(element => {\n            let taskName = element.object.name\n            //console.log(element)\n            console.log(i + taskName)\n            if (!finished.includes(taskName)) {\n                // console.log(taskName)\n                finished.push(element)\n                console.log(finished)\n            }\n            i++\n        }) */\n\n    /*     for (let i = 0; i < middleman.length; i++) {\n            let taskName = middleman[i].object.name;\n            const proov = names.includes(taskName)\n    \n            if (!proov) {\n                names.push(taskName)\n                finished.push(middleman[i])\n            } else if (proov) {\n    \n            }\n        } */\n\n    for (let i = 0; i < middleman.length; i++) {\n        let taskName1 = middleman[i].object.name;\n\n        for (let k = 0; k < middleman.length; k++) {\n            let taskName2 = middleman[k].object.name\n\n            if (taskName1 === taskName2) {\n                if (middleman[i].amount > middleman[k].amount) {\n                    finished.push(middleman[i])\n                } else if (middleman[i].amount > middleman[k].amount) {\n                    finished.push(middleman[k])\n                }\n            } else if (!taskName1 === taskName2) {\n                finished.push(middleman[i])\n            }\n        }\n    }\n\n    console.log(finished)\n}\n\n\nfunction ProfileInfo() {\n\n    const userProfile = useGQLQuery('user', GET_USER);\n    const tasks = useGQLQuery('task', GET_FINISHED_PROJECTS);\n    projectsData = useGQLQuery('xp', GET_DATE_AND_XP);\n    const levels = useGQLQuery('level', GET_LEVEL);\n    //let totalXP = 0;\n\n\n    /* if you don't use isLoading it is going to throw an error */\n    if (userProfile.isLoading || tasks.isLoading || projectsData.isLoading || levels.isLoading) return \"Loading...\";\n    // if (userProfile.error) return \"An error has occurred: \" + error.message;\n\n    const addPaths = tasks.data.user[0].progresses.map(path => {\n        let proovime = path.path\n        correctPaths.push(proovime)\n    })\n\n    //console.log(correctPaths)\n    correctPaths.map(element => {\n        //console.log(element)\n    })\n\n    /* filter out audits */\n    const possiblePaths = projectsData.data.user[0].transactions.map(project => {\n        return JSON.parse(JSON.stringify(project.path))\n    })\n\n    possiblePaths.map(element => {\n        // console.log(element)\n    })\n\n\n    const filterAudits = removeAudits(correctPaths, possiblePaths);\n    console.log(filterAudits)\n\n    return (\n        <div className='profile-info'>\n            <div className='profile-username-div'>\n                <p>{userProfile.data.user[0].login}</p>\n            </div>\n            <div className='profile-current-level-div'>\n                <p>Current level:</p>\n                <p id='current-level'>{levels.data.transaction[0].amount}</p>\n            </div>\n            <div className='profile-xp-amount'>\n\n            </div>\n        </div>\n    )\n}\n\nexport default ProfileInfo\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}