{"ast":null,"code":"var _jsxFileName = \"/home/mannakass/kood/graphql/src/components/FetchForAll.js\",\n  _s = $RefreshSig$();\nimport { createRef } from 'react';\nimport ProfileInfo from './ProfileInfo.js';\nimport TaskGraph from './TaskGraph.js';\nimport XPGraph from './XPGraph.js';\nimport { useGQLQuery } from '../Hooks/useGQLQurery';\nimport { GET_USER, GET_FINISHED_PROJECTS, GET_DATE_AND_XP, GET_LEVEL } from '../other/queries';\nimport { removeAudits } from '../other/remove.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function FetchForAll() {\n  _s();\n  correctPaths = /*#__PURE__*/createRef();\n  const userProfile = useGQLQuery('user', GET_USER);\n  const tasks = useGQLQuery('task', GET_FINISHED_PROJECTS);\n  const projectsData = useGQLQuery('xp', GET_DATE_AND_XP);\n  const levels = useGQLQuery('level', GET_LEVEL);\n\n  /* if you don't use isLoading it is going to throw an error */\n  if (userProfile.isLoading || tasks.isLoading || projectsData.isLoading || levels.isLoading) return \"Loading...\";\n  // if (userProfile.error) return \"An error has occurred: \" + error.message;\n\n  let correctPaths = [];\n  let middleman = [];\n\n  /* find all the correct paths */\n  tasks.data.user[0].progresses.map(path => {\n    let proovime = path.path;\n    correctPaths.push(proovime);\n  });\n\n  /* find all the possible paths */\n  const possiblePaths = projectsData.data.user[0].transactions.map(project => {\n    if (project.object.type === 'module') {\n      middleman.push(project);\n    }\n    return JSON.parse(JSON.stringify(project.path));\n  });\n\n  /* remove audits */\n  setCorrectProjects(removeAudits(correctPaths, possiblePaths, middleman, projectsData));\n  console.log(correctProjects);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ProfileInfo, {\n      correctProjects: correctProjects,\n      userProfile: userProfile,\n      levels: levels\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(XPGraph, {\n      correctProjects: correctProjects\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskGraph, {\n      correctProjects: correctProjects\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(FetchForAll, \"AxMo6b/3sVVvveeGdBWC7EWeOcs=\", false, function () {\n  return [useGQLQuery, useGQLQuery, useGQLQuery, useGQLQuery];\n});\n_c = FetchForAll;\nvar _c;\n$RefreshReg$(_c, \"FetchForAll\");","map":{"version":3,"names":["createRef","ProfileInfo","TaskGraph","XPGraph","useGQLQuery","GET_USER","GET_FINISHED_PROJECTS","GET_DATE_AND_XP","GET_LEVEL","removeAudits","FetchForAll","correctPaths","userProfile","tasks","projectsData","levels","isLoading","middleman","data","user","progresses","map","path","proovime","push","possiblePaths","transactions","project","object","type","JSON","parse","stringify","setCorrectProjects","console","log","correctProjects"],"sources":["/home/mannakass/kood/graphql/src/components/FetchForAll.js"],"sourcesContent":["import { createRef } from 'react';\nimport ProfileInfo from './ProfileInfo.js'\nimport TaskGraph from './TaskGraph.js';\nimport XPGraph from './XPGraph.js';\nimport { useGQLQuery } from '../Hooks/useGQLQurery'\nimport { GET_USER, GET_FINISHED_PROJECTS, GET_DATE_AND_XP, GET_LEVEL } from '../other/queries';\nimport { removeAudits } from '../other/remove.js';\n\nexport function FetchForAll() {\n    correctPaths = createRef()\n\n    const userProfile = useGQLQuery('user', GET_USER);\n    const tasks = useGQLQuery('task', GET_FINISHED_PROJECTS);\n    const projectsData = useGQLQuery('xp', GET_DATE_AND_XP);\n    const levels = useGQLQuery('level', GET_LEVEL);\n\n    /* if you don't use isLoading it is going to throw an error */\n    if (userProfile.isLoading || tasks.isLoading || projectsData.isLoading || levels.isLoading) return \"Loading...\";\n    // if (userProfile.error) return \"An error has occurred: \" + error.message;\n\n    let correctPaths = [];\n    let middleman = [];\n\n\n    /* find all the correct paths */\n    tasks.data.user[0].progresses.map(path => {\n        let proovime = path.path\n        correctPaths.push(proovime)\n    })\n\n    /* find all the possible paths */\n    const possiblePaths = projectsData.data.user[0].transactions.map(project => {\n        if (project.object.type === 'module') {\n            middleman.push(project)\n        }\n        return JSON.parse(JSON.stringify(project.path))\n    })\n\n    /* remove audits */\n    setCorrectProjects(removeAudits(correctPaths, possiblePaths, middleman, projectsData));\n\n    console.log(correctProjects)\n\n    return (\n        <div>\n            <ProfileInfo\n                correctProjects={correctProjects}\n                userProfile={userProfile}\n                levels={levels}\n            />\n            <XPGraph\n                correctProjects={correctProjects}\n            />\n            <TaskGraph\n                correctProjects={correctProjects}\n            />\n\n        </div>\n    )\n}"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,WAAW,MAAM,kBAAkB;AAC1C,OAAOC,SAAS,MAAM,gBAAgB;AACtC,OAAOC,OAAO,MAAM,cAAc;AAClC,SAASC,WAAW,QAAQ,uBAAuB;AACnD,SAASC,QAAQ,EAAEC,qBAAqB,EAAEC,eAAe,EAAEC,SAAS,QAAQ,kBAAkB;AAC9F,SAASC,YAAY,QAAQ,oBAAoB;AAAC;AAElD,OAAO,SAASC,WAAW,GAAG;EAAA;EAC1BC,YAAY,gBAAGX,SAAS,EAAE;EAE1B,MAAMY,WAAW,GAAGR,WAAW,CAAC,MAAM,EAAEC,QAAQ,CAAC;EACjD,MAAMQ,KAAK,GAAGT,WAAW,CAAC,MAAM,EAAEE,qBAAqB,CAAC;EACxD,MAAMQ,YAAY,GAAGV,WAAW,CAAC,IAAI,EAAEG,eAAe,CAAC;EACvD,MAAMQ,MAAM,GAAGX,WAAW,CAAC,OAAO,EAAEI,SAAS,CAAC;;EAE9C;EACA,IAAII,WAAW,CAACI,SAAS,IAAIH,KAAK,CAACG,SAAS,IAAIF,YAAY,CAACE,SAAS,IAAID,MAAM,CAACC,SAAS,EAAE,OAAO,YAAY;EAC/G;;EAEA,IAAIL,YAAY,GAAG,EAAE;EACrB,IAAIM,SAAS,GAAG,EAAE;;EAGlB;EACAJ,KAAK,CAACK,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAACC,UAAU,CAACC,GAAG,CAACC,IAAI,IAAI;IACtC,IAAIC,QAAQ,GAAGD,IAAI,CAACA,IAAI;IACxBX,YAAY,CAACa,IAAI,CAACD,QAAQ,CAAC;EAC/B,CAAC,CAAC;;EAEF;EACA,MAAME,aAAa,GAAGX,YAAY,CAACI,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAACO,YAAY,CAACL,GAAG,CAACM,OAAO,IAAI;IACxE,IAAIA,OAAO,CAACC,MAAM,CAACC,IAAI,KAAK,QAAQ,EAAE;MAClCZ,SAAS,CAACO,IAAI,CAACG,OAAO,CAAC;IAC3B;IACA,OAAOG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACL,OAAO,CAACL,IAAI,CAAC,CAAC;EACnD,CAAC,CAAC;;EAEF;EACAW,kBAAkB,CAACxB,YAAY,CAACE,YAAY,EAAEc,aAAa,EAAER,SAAS,EAAEH,YAAY,CAAC,CAAC;EAEtFoB,OAAO,CAACC,GAAG,CAACC,eAAe,CAAC;EAE5B,oBACI;IAAA,wBACI,QAAC,WAAW;MACR,eAAe,EAAEA,eAAgB;MACjC,WAAW,EAAExB,WAAY;MACzB,MAAM,EAAEG;IAAO;MAAA;MAAA;MAAA;IAAA,QACjB,eACF,QAAC,OAAO;MACJ,eAAe,EAAEqB;IAAgB;MAAA;MAAA;MAAA;IAAA,QACnC,eACF,QAAC,SAAS;MACN,eAAe,EAAEA;IAAgB;MAAA;MAAA;MAAA;IAAA,QACnC;EAAA;IAAA;IAAA;IAAA;EAAA,QAEA;AAEd;AAAC,GAnDe1B,WAAW;EAAA,QAGHN,WAAW,EACjBA,WAAW,EACJA,WAAW,EACjBA,WAAW;AAAA;AAAA,KANdM,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}