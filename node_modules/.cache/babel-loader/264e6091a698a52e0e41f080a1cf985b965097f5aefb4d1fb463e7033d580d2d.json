{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useQuery } from \"react-query\";\nimport { GraphQLClient, request } from \"graphql-request\";\nlet projectsData;\nlet userProfile;\nlet tasks;\nlet levels;\nexport function magic() {\n  _s();\n  userProfile = useGQLQuery('user', GET_USER);\n  tasks = useGQLQuery('task', GET_FINISHED_PROJECTS);\n  projectsData = useGQLQuery('xp', GET_DATE_AND_XP);\n  levels = useGQLQuery('level', GET_LEVEL);\n  if (userProfile.isLoading || tasks.isLoading || projectsData.isLoading || levels.isLoading) return \"Loading...\";\n}\n_s(magic, \"6ORQAuzTkMm4Uf/yatkTL1yjzaY=\", false, function () {\n  return [useGQLQuery, useGQLQuery, useGQLQuery, useGQLQuery];\n});\nexport const useGQLQuery = (key, query, variables) => {\n  _s2();\n  const endpoint = 'https://01.kood.tech/api/graphql-engine/v1/graphql';\n  const fetchData = async () => await request(endpoint, query, variables);\n  /*     if (userProfile.isLoading || tasks.isLoading || experiencePoints.isLoading || levels.isLoading) return \"Loading...\";\n   */\n\n  return useQuery([...key], fetchData);\n};\n_s2(useGQLQuery, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"names":["useQuery","GraphQLClient","request","projectsData","userProfile","tasks","levels","magic","useGQLQuery","GET_USER","GET_FINISHED_PROJECTS","GET_DATE_AND_XP","GET_LEVEL","isLoading","key","query","variables","endpoint","fetchData"],"sources":["/home/mannakass/kood/graphql/src/other/useGQLQurery.js"],"sourcesContent":["import { useQuery } from \"react-query\";\nimport { GraphQLClient, request } from \"graphql-request\";\n\nlet projectsData\nlet userProfile\nlet tasks\nlet levels\n\nexport function magic() {\n    userProfile = useGQLQuery('user', GET_USER);\n    tasks = useGQLQuery('task', GET_FINISHED_PROJECTS);\n    projectsData = useGQLQuery('xp', GET_DATE_AND_XP);\n    levels = useGQLQuery('level', GET_LEVEL);\n\n    if (userProfile.isLoading || tasks.isLoading || projectsData.isLoading || levels.isLoading) return \"Loading...\";\n\n}\n\nexport const useGQLQuery = (key, query, variables) => {\n    const endpoint = 'https://01.kood.tech/api/graphql-engine/v1/graphql';\n\n    const fetchData = async () => await request(endpoint, query, variables);\n    /*     if (userProfile.isLoading || tasks.isLoading || experiencePoints.isLoading || levels.isLoading) return \"Loading...\";\n     */\n\n    return useQuery([...key], fetchData)\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,aAAa;AACtC,SAASC,aAAa,EAAEC,OAAO,QAAQ,iBAAiB;AAExD,IAAIC,YAAY;AAChB,IAAIC,WAAW;AACf,IAAIC,KAAK;AACT,IAAIC,MAAM;AAEV,OAAO,SAASC,KAAK,GAAG;EAAA;EACpBH,WAAW,GAAGI,WAAW,CAAC,MAAM,EAAEC,QAAQ,CAAC;EAC3CJ,KAAK,GAAGG,WAAW,CAAC,MAAM,EAAEE,qBAAqB,CAAC;EAClDP,YAAY,GAAGK,WAAW,CAAC,IAAI,EAAEG,eAAe,CAAC;EACjDL,MAAM,GAAGE,WAAW,CAAC,OAAO,EAAEI,SAAS,CAAC;EAExC,IAAIR,WAAW,CAACS,SAAS,IAAIR,KAAK,CAACQ,SAAS,IAAIV,YAAY,CAACU,SAAS,IAAIP,MAAM,CAACO,SAAS,EAAE,OAAO,YAAY;AAEnH;AAAC,GAReN,KAAK;EAAA,QACHC,WAAW,EACjBA,WAAW,EACJA,WAAW,EACjBA,WAAW;AAAA;AAMxB,OAAO,MAAMA,WAAW,GAAG,CAACM,GAAG,EAAEC,KAAK,EAAEC,SAAS,KAAK;EAAA;EAClD,MAAMC,QAAQ,GAAG,oDAAoD;EAErE,MAAMC,SAAS,GAAG,YAAY,MAAMhB,OAAO,CAACe,QAAQ,EAAEF,KAAK,EAAEC,SAAS,CAAC;EACvE;AACJ;;EAEI,OAAOhB,QAAQ,CAAC,CAAC,GAAGc,GAAG,CAAC,EAAEI,SAAS,CAAC;AACxC,CAAC;AAAA,IARYV,WAAW;EAAA,QAObR,QAAQ;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}