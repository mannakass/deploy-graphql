{"ast":null,"code":"var _jsxFileName = \"/home/mannakass/kood/graphql/src/components/ProfileInfo.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useGQLQuery } from '../other/useGQLQurery';\nimport { GET_USER, GET_FINISHED_PROJECTS, GET_DATE_AND_XP, GET_LEVEL } from '../other/queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet correctPaths = [];\nexport function removeAudits(projects) {\n  let removedAudits = [];\n  let positions = [];\n  projects.forEach(a => {\n    projects.forEach(b => {\n      if (!positions.includes(a.path)) {\n        removedAudits.push(a);\n        positions.push(a.path);\n      }\n      if (a.path === b.path) {\n        if (a.amount > b.amount) {\n          let x = positions.indexOf(a.path);\n          if (x > 0) {\n            positions.splice(x, 1);\n            removedAudits.splice(x, 1);\n          }\n          removedAudits.push(a);\n          positions.push(a.path);\n        } else if (b.amount > a.amount) {\n          let x = positions.indexOf(b.path);\n          if (x > 0) {\n            positions.splice(x, 1);\n            removedAudits.splice(x, 1);\n          }\n          removedAudits.push(b);\n          positions.push(b.path);\n        }\n      }\n    });\n  });\n  return removedAudits;\n}\nfunction ProfileInfo() {\n  _s();\n  const userProfile = useGQLQuery('user', GET_USER);\n  const tasks = useGQLQuery('task', GET_FINISHED_PROJECTS);\n  const projectsData = useGQLQuery('xp', GET_DATE_AND_XP);\n  const levels = useGQLQuery('level', GET_LEVEL);\n  let totalXP = 0;\n\n  /* if you don't use isLoading it is going to throw an error */\n  if (userProfile.isLoading || tasks.isLoading || projectsData.isLoading || levels.isLoading) return \"Loading...\";\n  // if (userProfile.error) return \"An error has occurred: \" + error.message;\n\n  /* filter out piscine exercises and raids, audits remain */\n  /*     const projects = projectsData.data.user[0].transactions.filter(project => {\n          let projectType = project.object.type\n          if (projectType !== 'exercise' && projectType !== 'raid') {\n              return true\n          }\n      }) */\n\n  const addPaths = tasks.data.user[0].progresses.map(path => {\n    let proovime = path.path;\n    //console.log(proovime)\n    //console.log(path)\n    correctPaths.push(proovime);\n  });\n\n  /* filter out audits */\n  const projects = removeAudits(correctPaths);\n  console.log(projects);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-info\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-username-div\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: userProfile.data.user[0].login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-current-level-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Current level:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"current-level\",\n        children: levels.data.transaction[0].amount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-xp-amount\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"XP:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: 'jou    ' + correctPaths\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n_s(ProfileInfo, \"AxMo6b/3sVVvveeGdBWC7EWeOcs=\", false, function () {\n  return [useGQLQuery, useGQLQuery, useGQLQuery, useGQLQuery];\n});\n_c = ProfileInfo;\nexport default ProfileInfo;\nvar _c;\n$RefreshReg$(_c, \"ProfileInfo\");","map":{"version":3,"names":["React","useGQLQuery","GET_USER","GET_FINISHED_PROJECTS","GET_DATE_AND_XP","GET_LEVEL","correctPaths","removeAudits","projects","removedAudits","positions","forEach","a","b","includes","path","push","amount","x","indexOf","splice","ProfileInfo","userProfile","tasks","projectsData","levels","totalXP","isLoading","addPaths","data","user","progresses","map","proovime","console","log","login","transaction"],"sources":["/home/mannakass/kood/graphql/src/components/ProfileInfo.js"],"sourcesContent":["import React from 'react'\nimport { useGQLQuery } from '../other/useGQLQurery'\nimport { GET_USER, GET_FINISHED_PROJECTS, GET_DATE_AND_XP, GET_LEVEL } from '../other/queries';\n\n\nlet correctPaths = [];\n\nexport function removeAudits(projects) {\n    let removedAudits = []\n    let positions = []\n    projects.forEach(a => {\n        projects.forEach(b => {\n            if (!positions.includes(a.path)) {\n                removedAudits.push(a)\n                positions.push(a.path)\n            }\n            if (a.path === b.path) {\n                if (a.amount > b.amount) {\n                    let x = positions.indexOf(a.path)\n                    if (x > 0) {\n                        positions.splice(x, 1)\n                        removedAudits.splice(x, 1)\n                    }\n                    removedAudits.push(a)\n                    positions.push(a.path)\n                } else if (b.amount > a.amount) {\n                    let x = positions.indexOf(b.path)\n                    if (x > 0) {\n                        positions.splice(x, 1)\n                        removedAudits.splice(x, 1)\n                    }\n                    removedAudits.push(b)\n                    positions.push(b.path)\n                }\n            }\n        })\n    })\n    return (removedAudits)\n}\n\nfunction ProfileInfo() {\n\n    const userProfile = useGQLQuery('user', GET_USER);\n    const tasks = useGQLQuery('task', GET_FINISHED_PROJECTS);\n    const projectsData = useGQLQuery('xp', GET_DATE_AND_XP);\n    const levels = useGQLQuery('level', GET_LEVEL);\n    let totalXP = 0;\n\n\n    /* if you don't use isLoading it is going to throw an error */\n    if (userProfile.isLoading || tasks.isLoading || projectsData.isLoading || levels.isLoading) return \"Loading...\";\n    // if (userProfile.error) return \"An error has occurred: \" + error.message;\n\n    /* filter out piscine exercises and raids, audits remain */\n    /*     const projects = projectsData.data.user[0].transactions.filter(project => {\n            let projectType = project.object.type\n            if (projectType !== 'exercise' && projectType !== 'raid') {\n                return true\n            }\n        }) */\n\n\n    const addPaths = tasks.data.user[0].progresses.map(path => {\n        let proovime = path.path\n        //console.log(proovime)\n        //console.log(path)\n        correctPaths.push(proovime)\n    })\n\n\n    /* filter out audits */\n    const projects = removeAudits(correctPaths)\n    console.log(projects)\n\n    return (\n        <div className='profile-info'>\n            <div className='profile-username-div'>\n                <p>{userProfile.data.user[0].login}</p>\n            </div>\n            <div className='profile-current-level-div'>\n                <p>Current level:</p>\n                <p id='current-level'>{levels.data.transaction[0].amount}</p>\n            </div>\n            <div className='profile-xp-amount'>\n                <p>XP:</p>\n                <p>{'jou    ' + correctPaths}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default ProfileInfo\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}