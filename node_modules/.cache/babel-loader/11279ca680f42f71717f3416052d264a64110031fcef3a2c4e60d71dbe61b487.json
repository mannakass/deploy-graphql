{"ast":null,"code":"var _jsxFileName = \"/home/mannakass/kood/graphql/src/components/LineGraph.js\",\n  _s = $RefreshSig$();\nimport { React, useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction XPGraph(_ref) {\n  _s();\n  let {\n    increaseXP,\n    filterAudits\n  } = _ref;\n  let totalXP = 0;\n  filterAudits.map(project => totalXP += project.amount);\n  let myRef = useRef();\n  myRef.current = increaseXP;\n  const svgRef = useRef();\n  useEffect(() => {\n    // setting up svg\n    const width = 1000;\n    const height = 600;\n    const margin = {\n      top: 50,\n      bottom: 50,\n      left: 50,\n      right: 50\n    };\n    const Y = d3.map(myRef.current, d => d.amount);\n    const X = d3.map(myRef.current, d => d.createdAt);\n    console.log(Y);\n    const svg = d3.select(svgRef.current).attr('height', height - margin.top - margin.bottom).attr('width', width - margin.left - margin.right).attr('viewBox', [0, 0, width, height]);\n\n    // setting up the scaling\n    const xScale = d3.scaleUtc().domain(d3.extent(X)).range([margin.left, width - margin.right]);\n    const yScale = d3.scaleLinear().domain([0, totalXP]).range([height - margin.bottom, margin.top]);\n    const scaleLine = d3.line().x((d, i) => xScale(X[i])).y(yScale).curve(d3.curveLinear);\n    svg.selectAll('.line').data([Y]).join('path').attr('d', d => scaleLine(d)).attr('fill', 'none').attr('stroke', '#A7727D');\n    function yAxis(g) {\n      g.attr('transform', `translate(${margin.left}, 0)`);\n      g.call(d3.axisLeft(yScale));\n    }\n    function xAxis(g) {\n      g.attr('transform', `translate(0, ${height - margin.bottom})`).call(d3.axisBottom(xScale).ticks(width / 80).tickSizeOuter(0));\n    }\n    svg.append('g').call(yAxis);\n    svg.append('g').call(xAxis);\n  }, myRef.current);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"line-graph\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"line-graph-title\",\n      children: \"XP progression over time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_s(XPGraph, \"ruvG5NGr3harYqGY9q9U2eFX3Kk=\");\n_c = XPGraph;\nexport default XPGraph;\nvar _c;\n$RefreshReg$(_c, \"XPGraph\");","map":{"version":3,"names":["React","useRef","useEffect","d3","XPGraph","increaseXP","filterAudits","totalXP","map","project","amount","myRef","current","svgRef","width","height","margin","top","bottom","left","right","Y","d","X","createdAt","console","log","svg","select","attr","xScale","scaleUtc","domain","extent","range","yScale","scaleLinear","scaleLine","line","x","i","y","curve","curveLinear","selectAll","data","join","yAxis","g","call","axisLeft","xAxis","axisBottom","ticks","tickSizeOuter","append"],"sources":["/home/mannakass/kood/graphql/src/components/LineGraph.js"],"sourcesContent":["import { React, useRef, useEffect } from 'react';\nimport * as d3 from 'd3'\n\nfunction XPGraph({ increaseXP, filterAudits }) {\n\n    let totalXP = 0;\n    filterAudits.map(project => totalXP += project.amount)\n\n    let myRef = useRef()\n    myRef.current = increaseXP;\n\n    const svgRef = useRef()\n    useEffect(() => {\n        // setting up svg\n        const width = 1000;\n        const height = 600;\n        const margin = { top: 50, bottom: 50, left: 50, right: 50 }\n        const Y = d3.map(myRef.current, d => d.amount);\n        const X = d3.map(myRef.current, d => d.createdAt)\n        console.log(Y)\n\n        const svg = d3.select(svgRef.current)\n            .attr('height', height - margin.top - margin.bottom)\n            .attr('width', width - margin.left - margin.right)\n            .attr('viewBox', [0, 0, width, height])\n\n        // setting up the scaling\n        const xScale = d3.scaleUtc()\n            .domain(d3.extent(X))\n            .range([margin.left, width - margin.right])\n\n        const yScale = d3.scaleLinear()\n            .domain([0, totalXP])\n            .range([height - margin.bottom, margin.top])\n\n        const scaleLine = d3.line()\n            .x((d, i) => xScale(X[i]))\n            .y(yScale)\n            .curve(d3.curveLinear)\n\n        svg\n            .selectAll('.line')\n            .data([Y])\n            .join('path')\n            .attr('d', d => scaleLine(d))\n            .attr('fill', 'none')\n            .attr('stroke', '#A7727D')\n\n        function yAxis(g) {\n            g.attr('transform', `translate(${margin.left}, 0)`)\n            g.call(d3.axisLeft(yScale))\n        }\n\n        function xAxis(g) {\n            g.attr('transform', `translate(0, ${height - margin.bottom})`)\n                .call(d3.axisBottom(xScale).ticks(width / 80).tickSizeOuter(0))\n        }\n\n        svg.append('g').call(yAxis)\n        svg.append('g').call(xAxis)\n    }, myRef.current)\n\n\n    return (\n        <div className='line-graph'>\n            <p className='line-graph-title'>XP progression over time</p>\n            <svg ref={svgRef}></svg>\n        </div>\n    )\n}\n\nexport default XPGraph\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}