{"ast":null,"code":"import * as d3 from \"d3\";\nexport function barGraph(filterAudits) {\n  const width = 800;\n  const height = 400;\n  const margin = {\n    top: 50,\n    bottom: 50,\n    left: 50,\n    right: 50\n  };\n  const Y = d3.map(filterAudits, d => d.item);\n  console.log(Y);\n  const svg = d3.select('.App').append('svg').attr('height', height - margin.top - margin.bottom).attr('width', width - margin.left - margin.right).attr('viewBox', [0, 0, width, height]);\n  const x = d3.scaleBand().domain(d3.range(filterAudits.length)).range([margin.left, width - margin.right]).padding(0.1);\n  const y = d3.scaleLinear().domain([0, d3.max(Y)]).range([height - margin.bottom, margin.top]);\n  svg.append('g').attr('fill', 'royalblue').selectAll('rect').data(filterAudits.amount).join('rect').attr('x', (d, i) => x(i)).attr('y', d => y(d.amount)).attr('height', d => y(0) - y(d.amount)).attr('width', x.bandwidth());\n  svg.node();\n}","map":{"version":3,"names":["d3","barGraph","filterAudits","width","height","margin","top","bottom","left","right","Y","map","d","item","console","log","svg","select","append","attr","x","scaleBand","domain","range","length","padding","y","scaleLinear","max","selectAll","data","amount","join","i","bandwidth","node"],"sources":["/home/mannakass/kood/graphql/src/other/graph.js"],"sourcesContent":["import * as d3 from \"d3\";\n\nexport function barGraph(filterAudits) {\n    const width = 800;\n    const height = 400;\n    const margin = { top: 50, bottom: 50, left: 50, right: 50 }\n    const Y = d3.map(filterAudits, d => d.item);\n    console.log(Y)\n\n    const svg = d3.select('.App')\n        .append('svg')\n        .attr('height', height - margin.top - margin.bottom)\n        .attr('width', width - margin.left - margin.right)\n        .attr('viewBox', [0, 0, width, height])\n\n\n    const x = d3.scaleBand()\n        .domain(d3.range(filterAudits.length))\n        .range([margin.left, width - margin.right])\n        .padding(0.1)\n\n\n    const y = d3.scaleLinear()\n        .domain([0, d3.max(Y)])\n        .range([height - margin.bottom, margin.top])\n\n    svg\n        .append('g')\n        .attr('fill', 'royalblue')\n        .selectAll('rect')\n        .data(filterAudits.amount)\n        .join('rect')\n        .attr('x', (d, i) => x(i))\n        .attr('y', (d) => y(d.amount))\n        .attr('height', d => y(0) - y(d.amount))\n        .attr('width', x.bandwidth())\n\n    svg.node()\n}"],"mappings":"AAAA,OAAO,KAAKA,EAAE,MAAM,IAAI;AAExB,OAAO,SAASC,QAAQ,CAACC,YAAY,EAAE;EACnC,MAAMC,KAAK,GAAG,GAAG;EACjB,MAAMC,MAAM,GAAG,GAAG;EAClB,MAAMC,MAAM,GAAG;IAAEC,GAAG,EAAE,EAAE;IAAEC,MAAM,EAAE,EAAE;IAAEC,IAAI,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAG,CAAC;EAC3D,MAAMC,CAAC,GAAGV,EAAE,CAACW,GAAG,CAACT,YAAY,EAAEU,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC;EAC3CC,OAAO,CAACC,GAAG,CAACL,CAAC,CAAC;EAEd,MAAMM,GAAG,GAAGhB,EAAE,CAACiB,MAAM,CAAC,MAAM,CAAC,CACxBC,MAAM,CAAC,KAAK,CAAC,CACbC,IAAI,CAAC,QAAQ,EAAEf,MAAM,GAAGC,MAAM,CAACC,GAAG,GAAGD,MAAM,CAACE,MAAM,CAAC,CACnDY,IAAI,CAAC,OAAO,EAAEhB,KAAK,GAAGE,MAAM,CAACG,IAAI,GAAGH,MAAM,CAACI,KAAK,CAAC,CACjDU,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,EAAEhB,KAAK,EAAEC,MAAM,CAAC,CAAC;EAG3C,MAAMgB,CAAC,GAAGpB,EAAE,CAACqB,SAAS,EAAE,CACnBC,MAAM,CAACtB,EAAE,CAACuB,KAAK,CAACrB,YAAY,CAACsB,MAAM,CAAC,CAAC,CACrCD,KAAK,CAAC,CAAClB,MAAM,CAACG,IAAI,EAAEL,KAAK,GAAGE,MAAM,CAACI,KAAK,CAAC,CAAC,CAC1CgB,OAAO,CAAC,GAAG,CAAC;EAGjB,MAAMC,CAAC,GAAG1B,EAAE,CAAC2B,WAAW,EAAE,CACrBL,MAAM,CAAC,CAAC,CAAC,EAAEtB,EAAE,CAAC4B,GAAG,CAAClB,CAAC,CAAC,CAAC,CAAC,CACtBa,KAAK,CAAC,CAACnB,MAAM,GAAGC,MAAM,CAACE,MAAM,EAAEF,MAAM,CAACC,GAAG,CAAC,CAAC;EAEhDU,GAAG,CACEE,MAAM,CAAC,GAAG,CAAC,CACXC,IAAI,CAAC,MAAM,EAAE,WAAW,CAAC,CACzBU,SAAS,CAAC,MAAM,CAAC,CACjBC,IAAI,CAAC5B,YAAY,CAAC6B,MAAM,CAAC,CACzBC,IAAI,CAAC,MAAM,CAAC,CACZb,IAAI,CAAC,GAAG,EAAE,CAACP,CAAC,EAAEqB,CAAC,KAAKb,CAAC,CAACa,CAAC,CAAC,CAAC,CACzBd,IAAI,CAAC,GAAG,EAAGP,CAAC,IAAKc,CAAC,CAACd,CAAC,CAACmB,MAAM,CAAC,CAAC,CAC7BZ,IAAI,CAAC,QAAQ,EAAEP,CAAC,IAAIc,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAACd,CAAC,CAACmB,MAAM,CAAC,CAAC,CACvCZ,IAAI,CAAC,OAAO,EAAEC,CAAC,CAACc,SAAS,EAAE,CAAC;EAEjClB,GAAG,CAACmB,IAAI,EAAE;AACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}