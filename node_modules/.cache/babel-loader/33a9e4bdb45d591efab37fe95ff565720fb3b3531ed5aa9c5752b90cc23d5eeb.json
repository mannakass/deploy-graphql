{"ast":null,"code":"var _jsxFileName = \"/home/mannakass/kood/graphql/src/components/ProfileInfo.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useGQLQuery } from '../other/useGQLQurery';\nimport { GET_USER, GET_FINISHED_PROJECTS, GET_DATE_AND_XP, GET_LEVEL } from '../other/queries';\nimport { removeAudits } from '../other/remove';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet projectsData;\nlet middleman = [];\nfunction ProfileInfo() {\n  _s();\n  const userProfile = useGQLQuery('user', GET_USER);\n  const tasks = useGQLQuery('task', GET_FINISHED_PROJECTS);\n  projectsData = useGQLQuery('xp', GET_DATE_AND_XP);\n  const levels = useGQLQuery('level', GET_LEVEL);\n  let totalXP = 0;\n  let correctPaths = [];\n\n  /* if you don't use isLoading it is going to throw an error */\n  if (userProfile.isLoading || tasks.isLoading || projectsData.isLoading || levels.isLoading) return \"Loading...\";\n  // if (userProfile.error) return \"An error has occurred: \" + error.message;\n\n  tasks.data.user[0].progresses.map(path => {\n    let proovime = path.path;\n    correctPaths.push(proovime);\n  });\n\n  /* filter out audits */\n  const possiblePaths = projectsData.data.user[0].transactions.map(project => {\n    if (project.object.type === 'module') {\n      middleman.push(project);\n    }\n    return JSON.parse(JSON.stringify(project.path));\n  });\n  const filterAudits = removeAudits(correctPaths, possiblePaths);\n  console.log(filterAudits);\n  filterAudits.map(project => totalXP += project.amount);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-info\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-username-div\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: userProfile.data.user[0].login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-current-level-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Current level:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"current-level\",\n        children: levels.data.transaction[0].amount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-xp-amount\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"XP: \", totalXP]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(ProfileInfo, \"rARKcenYEKfnsFnjgbIeo3gORxU=\", false, function () {\n  return [useGQLQuery, useGQLQuery, useGQLQuery, useGQLQuery];\n});\n_c = ProfileInfo;\nexport default ProfileInfo;\nvar _c;\n$RefreshReg$(_c, \"ProfileInfo\");","map":{"version":3,"names":["React","useGQLQuery","GET_USER","GET_FINISHED_PROJECTS","GET_DATE_AND_XP","GET_LEVEL","removeAudits","projectsData","middleman","ProfileInfo","userProfile","tasks","levels","totalXP","correctPaths","isLoading","data","user","progresses","map","path","proovime","push","possiblePaths","transactions","project","object","type","JSON","parse","stringify","filterAudits","console","log","amount","login","transaction"],"sources":["/home/mannakass/kood/graphql/src/components/ProfileInfo.js"],"sourcesContent":["import React from 'react'\nimport { useGQLQuery } from '../other/useGQLQurery'\nimport { GET_USER, GET_FINISHED_PROJECTS, GET_DATE_AND_XP, GET_LEVEL } from '../other/queries';\nimport { removeAudits } from '../other/remove';\n\n\nlet projectsData\nlet middleman = [];\n\n\n\nfunction ProfileInfo() {\n\n    const userProfile = useGQLQuery('user', GET_USER);\n    const tasks = useGQLQuery('task', GET_FINISHED_PROJECTS);\n    projectsData = useGQLQuery('xp', GET_DATE_AND_XP);\n    const levels = useGQLQuery('level', GET_LEVEL);\n\n    let totalXP = 0;\n    let correctPaths = [];\n\n    /* if you don't use isLoading it is going to throw an error */\n    if (userProfile.isLoading || tasks.isLoading || projectsData.isLoading || levels.isLoading) return \"Loading...\";\n    // if (userProfile.error) return \"An error has occurred: \" + error.message;\n\n    tasks.data.user[0].progresses.map(path => {\n        let proovime = path.path\n        correctPaths.push(proovime)\n    })\n\n    /* filter out audits */\n    const possiblePaths = projectsData.data.user[0].transactions.map(project => {\n        if (project.object.type === 'module') {\n            middleman.push(project)\n        }\n        return JSON.parse(JSON.stringify(project.path))\n    })\n\n    const filterAudits = removeAudits(correctPaths, possiblePaths);\n    console.log(filterAudits)\n\n    filterAudits.map(project => totalXP += project.amount\n    )\n\n    return (\n        <div className='profile-info'>\n            <div className='profile-username-div'>\n                <p>{userProfile.data.user[0].login}</p>\n            </div>\n            <div className='profile-current-level-div'>\n                <p>Current level:</p>\n                <p id='current-level'>{levels.data.transaction[0].amount}</p>\n            </div>\n            <div className='profile-xp-amount'>\n                <p>XP: {totalXP}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default ProfileInfo\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,uBAAuB;AACnD,SAASC,QAAQ,EAAEC,qBAAqB,EAAEC,eAAe,EAAEC,SAAS,QAAQ,kBAAkB;AAC9F,SAASC,YAAY,QAAQ,iBAAiB;AAAC;AAG/C,IAAIC,YAAY;AAChB,IAAIC,SAAS,GAAG,EAAE;AAIlB,SAASC,WAAW,GAAG;EAAA;EAEnB,MAAMC,WAAW,GAAGT,WAAW,CAAC,MAAM,EAAEC,QAAQ,CAAC;EACjD,MAAMS,KAAK,GAAGV,WAAW,CAAC,MAAM,EAAEE,qBAAqB,CAAC;EACxDI,YAAY,GAAGN,WAAW,CAAC,IAAI,EAAEG,eAAe,CAAC;EACjD,MAAMQ,MAAM,GAAGX,WAAW,CAAC,OAAO,EAAEI,SAAS,CAAC;EAE9C,IAAIQ,OAAO,GAAG,CAAC;EACf,IAAIC,YAAY,GAAG,EAAE;;EAErB;EACA,IAAIJ,WAAW,CAACK,SAAS,IAAIJ,KAAK,CAACI,SAAS,IAAIR,YAAY,CAACQ,SAAS,IAAIH,MAAM,CAACG,SAAS,EAAE,OAAO,YAAY;EAC/G;;EAEAJ,KAAK,CAACK,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAACC,UAAU,CAACC,GAAG,CAACC,IAAI,IAAI;IACtC,IAAIC,QAAQ,GAAGD,IAAI,CAACA,IAAI;IACxBN,YAAY,CAACQ,IAAI,CAACD,QAAQ,CAAC;EAC/B,CAAC,CAAC;;EAEF;EACA,MAAME,aAAa,GAAGhB,YAAY,CAACS,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAACO,YAAY,CAACL,GAAG,CAACM,OAAO,IAAI;IACxE,IAAIA,OAAO,CAACC,MAAM,CAACC,IAAI,KAAK,QAAQ,EAAE;MAClCnB,SAAS,CAACc,IAAI,CAACG,OAAO,CAAC;IAC3B;IACA,OAAOG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACL,OAAO,CAACL,IAAI,CAAC,CAAC;EACnD,CAAC,CAAC;EAEF,MAAMW,YAAY,GAAGzB,YAAY,CAACQ,YAAY,EAAES,aAAa,CAAC;EAC9DS,OAAO,CAACC,GAAG,CAACF,YAAY,CAAC;EAEzBA,YAAY,CAACZ,GAAG,CAACM,OAAO,IAAIZ,OAAO,IAAIY,OAAO,CAACS,MAAM,CACpD;EAED,oBACI;IAAK,SAAS,EAAC,cAAc;IAAA,wBACzB;MAAK,SAAS,EAAC,sBAAsB;MAAA,uBACjC;QAAA,UAAIxB,WAAW,CAACM,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAACkB;MAAK;QAAA;QAAA;QAAA;MAAA;IAAK;MAAA;MAAA;MAAA;IAAA,QACrC,eACN;MAAK,SAAS,EAAC,2BAA2B;MAAA,wBACtC;QAAA,UAAG;MAAc;QAAA;QAAA;QAAA;MAAA,QAAI,eACrB;QAAG,EAAE,EAAC,eAAe;QAAA,UAAEvB,MAAM,CAACI,IAAI,CAACoB,WAAW,CAAC,CAAC,CAAC,CAACF;MAAM;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAC3D,eACN;MAAK,SAAS,EAAC,mBAAmB;MAAA,uBAC9B;QAAA,WAAG,MAAI,EAACrB,OAAO;MAAA;QAAA;QAAA;QAAA;MAAA;IAAK;MAAA;MAAA;MAAA;IAAA,QAClB;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd;AAAC,GA/CQJ,WAAW;EAAA,QAEIR,WAAW,EACjBA,WAAW,EACVA,WAAW,EACXA,WAAW;AAAA;AAAA,KALrBQ,WAAW;AAiDpB,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}