{"ast":null,"code":"var _jsxFileName = \"/home/mannakass/kood/graphql/src/components/ProfileInfo.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useGQLQuery } from '../other/useGQLQurery';\nimport { GET_USER, GET_FINISHED_PROJECTS, GET_DATE_AND_XP, GET_LEVEL } from '../other/queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet paths = [];\nfunction filterAudits(path) {\n  console.log(paths);\n}\nfunction ProfileInfo() {\n  _s();\n  const userProfile = useGQLQuery('user', GET_USER);\n  const tasks = useGQLQuery('task', GET_FINISHED_PROJECTS);\n  const projectsData = useGQLQuery('xp', GET_DATE_AND_XP);\n  const levels = useGQLQuery('level', GET_LEVEL);\n  let totalXP = 0;\n  const addPaths = tasks.data.user[0].progresses.map(path => {\n    console.log(path);\n    paths.push(path);\n  });\n\n  /* if you don't use isLoading it is going to throw an error */\n  if (userProfile.isLoading || tasks.isLoading || projectsData.isLoading || levels.isLoading) return \"Loading...\";\n  // if (userProfile.error) return \"An error has occurred: \" + error.message;\n\n  /* filter out piscine exercises and raids, audits remain */\n  /*     const projects = projectsData.data.user[0].transactions.filter(project => {\n          let projectType = project.object.type\n          if (projectType !== 'exercise' && projectType !== 'raid') {\n              return true\n          }\n      }) */\n\n  /* filter out audits */\n  const projects = projectsData.data.user[0].transactions.filter(filterAudits);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-info\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-username-div\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: userProfile.data.user[0].login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-current-level-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Current level:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"current-level\",\n        children: levels.data.transaction[0].amount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-xp-amount\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"XP:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(ProfileInfo, \"AxMo6b/3sVVvveeGdBWC7EWeOcs=\", false, function () {\n  return [useGQLQuery, useGQLQuery, useGQLQuery, useGQLQuery];\n});\n_c = ProfileInfo;\nexport default ProfileInfo;\nvar _c;\n$RefreshReg$(_c, \"ProfileInfo\");","map":{"version":3,"names":["React","useGQLQuery","GET_USER","GET_FINISHED_PROJECTS","GET_DATE_AND_XP","GET_LEVEL","paths","filterAudits","path","console","log","ProfileInfo","userProfile","tasks","projectsData","levels","totalXP","addPaths","data","user","progresses","map","push","isLoading","projects","transactions","filter","login","transaction","amount"],"sources":["/home/mannakass/kood/graphql/src/components/ProfileInfo.js"],"sourcesContent":["import React from 'react'\nimport { useGQLQuery } from '../other/useGQLQurery'\nimport { GET_USER, GET_FINISHED_PROJECTS, GET_DATE_AND_XP, GET_LEVEL } from '../other/queries';\n\n\nlet paths = [];\n\nfunction filterAudits(path) {\n\n    console.log(paths)\n\n}\n\nfunction ProfileInfo() {\n\n    const userProfile = useGQLQuery('user', GET_USER);\n    const tasks = useGQLQuery('task', GET_FINISHED_PROJECTS);\n    const projectsData = useGQLQuery('xp', GET_DATE_AND_XP);\n    const levels = useGQLQuery('level', GET_LEVEL);\n    let totalXP = 0;\n\n    const addPaths = tasks.data.user[0].progresses.map(path => {\n        console.log(path)\n        paths.push(path)\n    })\n\n    /* if you don't use isLoading it is going to throw an error */\n    if (userProfile.isLoading || tasks.isLoading || projectsData.isLoading || levels.isLoading) return \"Loading...\";\n    // if (userProfile.error) return \"An error has occurred: \" + error.message;\n\n    /* filter out piscine exercises and raids, audits remain */\n    /*     const projects = projectsData.data.user[0].transactions.filter(project => {\n            let projectType = project.object.type\n            if (projectType !== 'exercise' && projectType !== 'raid') {\n                return true\n            }\n        }) */\n\n\n\n\n\n    /* filter out audits */\n    const projects = projectsData.data.user[0].transactions.filter(filterAudits)\n\n\n    return (\n        <div className='profile-info'>\n            <div className='profile-username-div'>\n                <p>{userProfile.data.user[0].login}</p>\n            </div>\n            <div className='profile-current-level-div'>\n                <p>Current level:</p>\n                <p id='current-level'>{levels.data.transaction[0].amount}</p>\n            </div>\n            <div className='profile-xp-amount'>\n                <p>XP:</p>\n                <p></p>\n            </div>\n        </div>\n    )\n}\n\nexport default ProfileInfo\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,uBAAuB;AACnD,SAASC,QAAQ,EAAEC,qBAAqB,EAAEC,eAAe,EAAEC,SAAS,QAAQ,kBAAkB;AAAC;AAG/F,IAAIC,KAAK,GAAG,EAAE;AAEd,SAASC,YAAY,CAACC,IAAI,EAAE;EAExBC,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;AAEtB;AAEA,SAASK,WAAW,GAAG;EAAA;EAEnB,MAAMC,WAAW,GAAGX,WAAW,CAAC,MAAM,EAAEC,QAAQ,CAAC;EACjD,MAAMW,KAAK,GAAGZ,WAAW,CAAC,MAAM,EAAEE,qBAAqB,CAAC;EACxD,MAAMW,YAAY,GAAGb,WAAW,CAAC,IAAI,EAAEG,eAAe,CAAC;EACvD,MAAMW,MAAM,GAAGd,WAAW,CAAC,OAAO,EAAEI,SAAS,CAAC;EAC9C,IAAIW,OAAO,GAAG,CAAC;EAEf,MAAMC,QAAQ,GAAGJ,KAAK,CAACK,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAACC,UAAU,CAACC,GAAG,CAACb,IAAI,IAAI;IACvDC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjBF,KAAK,CAACgB,IAAI,CAACd,IAAI,CAAC;EACpB,CAAC,CAAC;;EAEF;EACA,IAAII,WAAW,CAACW,SAAS,IAAIV,KAAK,CAACU,SAAS,IAAIT,YAAY,CAACS,SAAS,IAAIR,MAAM,CAACQ,SAAS,EAAE,OAAO,YAAY;EAC/G;;EAEA;EACA;AACJ;AACA;AACA;AACA;AACA;;EAMI;EACA,MAAMC,QAAQ,GAAGV,YAAY,CAACI,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAACM,YAAY,CAACC,MAAM,CAACnB,YAAY,CAAC;EAG5E,oBACI;IAAK,SAAS,EAAC,cAAc;IAAA,wBACzB;MAAK,SAAS,EAAC,sBAAsB;MAAA,uBACjC;QAAA,UAAIK,WAAW,CAACM,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAACQ;MAAK;QAAA;QAAA;QAAA;MAAA;IAAK;MAAA;MAAA;MAAA;IAAA,QACrC,eACN;MAAK,SAAS,EAAC,2BAA2B;MAAA,wBACtC;QAAA,UAAG;MAAc;QAAA;QAAA;QAAA;MAAA,QAAI,eACrB;QAAG,EAAE,EAAC,eAAe;QAAA,UAAEZ,MAAM,CAACG,IAAI,CAACU,WAAW,CAAC,CAAC,CAAC,CAACC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAC3D,eACN;MAAK,SAAS,EAAC,mBAAmB;MAAA,wBAC9B;QAAA,UAAG;MAAG;QAAA;QAAA;QAAA;MAAA,QAAI,eACV;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QACL;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd;AAAC,GAhDQlB,WAAW;EAAA,QAEIV,WAAW,EACjBA,WAAW,EACJA,WAAW,EACjBA,WAAW;AAAA;AAAA,KALrBU,WAAW;AAkDpB,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}