{"ast":null,"code":"var _jsxFileName = \"/home/mannakass/kood/graphql/src/components/ProfileInfo.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useGQLQuery } from '../other/useGQLQurery';\nimport { GET_USER, GET_FINISHED_PROJECTS, GET_DATE_AND_XP, GET_LEVEL } from '../other/queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProfileInfo() {\n  _s();\n  const userProfile = useGQLQuery('user', GET_USER);\n  const tasks = useGQLQuery('task', GET_FINISHED_PROJECTS);\n  const experiencePoints = useGQLQuery('xp', GET_DATE_AND_XP);\n  const levels = useGQLQuery('level', GET_LEVEL);\n\n  /* if you don't use isLoading it is going to throw an error */\n  if (userProfile.isLoading || tasks.isLoading || experiencePoints.isLoading || levels.isLoading) return \"Loading...\";\n  // if (userProfile.error) return \"An error has occurred: \" + error.message;\n\n  const wtf = userProfile.data.user[0].login;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: wtf\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n_s(ProfileInfo, \"WrysKdkyOegO3Aujo9cQMrplQ9U=\", false, function () {\n  return [useGQLQuery, useGQLQuery, useGQLQuery, useGQLQuery];\n});\n_c = ProfileInfo;\nexport default ProfileInfo;\nvar _c;\n$RefreshReg$(_c, \"ProfileInfo\");","map":{"version":3,"names":["React","useGQLQuery","GET_USER","GET_FINISHED_PROJECTS","GET_DATE_AND_XP","GET_LEVEL","ProfileInfo","userProfile","tasks","experiencePoints","levels","isLoading","wtf","data","user","login"],"sources":["/home/mannakass/kood/graphql/src/components/ProfileInfo.js"],"sourcesContent":["import React from 'react'\nimport { useGQLQuery } from '../other/useGQLQurery'\nimport { GET_USER, GET_FINISHED_PROJECTS, GET_DATE_AND_XP, GET_LEVEL } from '../other/queries';\n\nfunction ProfileInfo() {\n\n    const userProfile = useGQLQuery('user', GET_USER);\n    const tasks = useGQLQuery('task', GET_FINISHED_PROJECTS);\n    const experiencePoints = useGQLQuery('xp', GET_DATE_AND_XP);\n    const levels = useGQLQuery('level', GET_LEVEL);\n\n    /* if you don't use isLoading it is going to throw an error */\n    if (userProfile.isLoading || tasks.isLoading || experiencePoints.isLoading || levels.isLoading) return \"Loading...\";\n    // if (userProfile.error) return \"An error has occurred: \" + error.message;\n\n    const wtf = userProfile.data.user[0].login\n    return (\n        <div>\n            <p>{wtf}</p>\n        </div>\n    )\n}\n\nexport default ProfileInfo\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,uBAAuB;AACnD,SAASC,QAAQ,EAAEC,qBAAqB,EAAEC,eAAe,EAAEC,SAAS,QAAQ,kBAAkB;AAAC;AAE/F,SAASC,WAAW,GAAG;EAAA;EAEnB,MAAMC,WAAW,GAAGN,WAAW,CAAC,MAAM,EAAEC,QAAQ,CAAC;EACjD,MAAMM,KAAK,GAAGP,WAAW,CAAC,MAAM,EAAEE,qBAAqB,CAAC;EACxD,MAAMM,gBAAgB,GAAGR,WAAW,CAAC,IAAI,EAAEG,eAAe,CAAC;EAC3D,MAAMM,MAAM,GAAGT,WAAW,CAAC,OAAO,EAAEI,SAAS,CAAC;;EAE9C;EACA,IAAIE,WAAW,CAACI,SAAS,IAAIH,KAAK,CAACG,SAAS,IAAIF,gBAAgB,CAACE,SAAS,IAAID,MAAM,CAACC,SAAS,EAAE,OAAO,YAAY;EACnH;;EAEA,MAAMC,GAAG,GAAGL,WAAW,CAACM,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAACC,KAAK;EAC1C,oBACI;IAAA,uBACI;MAAA,UAAIH;IAAG;MAAA;MAAA;MAAA;IAAA;EAAK;IAAA;IAAA;IAAA;EAAA,QACV;AAEd;AAAC,GAjBQN,WAAW;EAAA,QAEIL,WAAW,EACjBA,WAAW,EACAA,WAAW,EACrBA,WAAW;AAAA;AAAA,KALrBK,WAAW;AAmBpB,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}