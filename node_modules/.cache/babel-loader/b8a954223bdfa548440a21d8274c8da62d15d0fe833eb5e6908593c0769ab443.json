{"ast":null,"code":"var _jsxFileName = \"/home/mannakass/kood/graphql/src/components/ProfileInfo.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useGQLQuery } from '../other/useGQLQurery';\nimport { GET_USER, GET_FINISHED_PROJECTS, GET_DATE_AND_XP, GET_LEVEL } from '../other/queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet projectsData;\nlet middleman = [];\nfunction removeAudits(correct, possible) {\n  let finished = [];\n  let names = [];\n  let k = 0;\n  for (let i = 0; i < correct.length; i++) {\n    for (let j = 0; j < possible.length; j++) {\n      if (correct[i] === possible[j]) {\n        middleman.push(projectsData.data.user[0].transactions[j]);\n      }\n    }\n  }\n  middleman.sort();\n  middleman.reverse();\n  for (let i = 0; i < middleman.length; i++) {\n    let taskName1 = middleman[i].object.name;\n    while (k < middleman.length) {\n      let taskName2 = middleman[k].object.name;\n      if (taskName1 === taskName2) {\n        if (middleman[i].amount > middleman[k].amount) {\n          if (!names.includes(taskName1)) {\n            names.push(taskName1);\n            finished.push(middleman[i]);\n          }\n        } else if (middleman[i].amount === middleman[k].amount) {\n          if (!names.includes(taskName1)) {\n            names.push(taskName1);\n            finished.push(middleman[i]);\n          }\n        }\n      }\n      k++;\n    }\n    k = 0;\n  }\n  return finished;\n}\nfunction ProfileInfo() {\n  _s();\n  const userProfile = useGQLQuery('user', GET_USER);\n  const tasks = useGQLQuery('task', GET_FINISHED_PROJECTS);\n  projectsData = useGQLQuery('xp', GET_DATE_AND_XP);\n  const levels = useGQLQuery('level', GET_LEVEL);\n  let totalXP = 0;\n  let correctPaths = [];\n\n  /* if you don't use isLoading it is going to throw an error */\n  if (userProfile.isLoading || tasks.isLoading || projectsData.isLoading || levels.isLoading) return \"Loading...\";\n  // if (userProfile.error) return \"An error has occurred: \" + error.message;\n\n  tasks.data.user[0].progresses.map(path => {\n    let proovime = path.path;\n    correctPaths.push(proovime);\n  });\n\n  /* filter out audits */\n  const possiblePaths = projectsData.data.user[0].transactions.map(project => {\n    if (project.object.type === 'module') {\n      middleman.push(project);\n    }\n    return JSON.parse(JSON.stringify(project.path));\n  });\n  const filterAudits = removeAudits(correctPaths, possiblePaths);\n  console.log(filterAudits);\n  filterAudits.map(project => {\n    totalXP += project.amount;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-info\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-username-div\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: userProfile.data.user[0].login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-current-level-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Current level:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"current-level\",\n        children: levels.data.transaction[0].amount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-xp-amount\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n}\n_s(ProfileInfo, \"rARKcenYEKfnsFnjgbIeo3gORxU=\", false, function () {\n  return [useGQLQuery, useGQLQuery, useGQLQuery, useGQLQuery];\n});\n_c = ProfileInfo;\nexport default ProfileInfo;\nvar _c;\n$RefreshReg$(_c, \"ProfileInfo\");","map":{"version":3,"names":["React","useGQLQuery","GET_USER","GET_FINISHED_PROJECTS","GET_DATE_AND_XP","GET_LEVEL","projectsData","middleman","removeAudits","correct","possible","finished","names","k","i","length","j","push","data","user","transactions","sort","reverse","taskName1","object","name","taskName2","amount","includes","ProfileInfo","userProfile","tasks","levels","totalXP","correctPaths","isLoading","progresses","map","path","proovime","possiblePaths","project","type","JSON","parse","stringify","filterAudits","console","log","login","transaction"],"sources":["/home/mannakass/kood/graphql/src/components/ProfileInfo.js"],"sourcesContent":["import React from 'react'\nimport { useGQLQuery } from '../other/useGQLQurery'\nimport { GET_USER, GET_FINISHED_PROJECTS, GET_DATE_AND_XP, GET_LEVEL } from '../other/queries';\n\n\nlet projectsData\nlet middleman = [];\n\nfunction removeAudits(correct, possible) {\n    let finished = [];\n    let names = [];\n    let k = 0;\n\n    for (let i = 0; i < correct.length; i++) {\n        for (let j = 0; j < possible.length; j++) {\n            if (correct[i] === possible[j]) {\n                middleman.push(projectsData.data.user[0].transactions[j])\n            }\n        }\n    }\n\n    middleman.sort();\n    middleman.reverse();\n    for (let i = 0; i < middleman.length; i++) {\n        let taskName1 = middleman[i].object.name;\n\n        while (k < middleman.length) {\n            let taskName2 = middleman[k].object.name\n\n            if (taskName1 === taskName2) {\n                if (middleman[i].amount > middleman[k].amount) {\n\n                    if (!names.includes(taskName1)) {\n                        names.push(taskName1)\n                        finished.push(middleman[i])\n                    }\n                } else if (middleman[i].amount === middleman[k].amount) {\n\n                    if (!names.includes(taskName1)) {\n                        names.push(taskName1)\n                        finished.push(middleman[i])\n                    }\n                }\n            }\n            k++\n        }\n        k = 0;\n    }\n\n    return finished\n}\n\n\nfunction ProfileInfo() {\n\n    const userProfile = useGQLQuery('user', GET_USER);\n    const tasks = useGQLQuery('task', GET_FINISHED_PROJECTS);\n    projectsData = useGQLQuery('xp', GET_DATE_AND_XP);\n    const levels = useGQLQuery('level', GET_LEVEL);\n\n    let totalXP = 0;\n    let correctPaths = [];\n\n    /* if you don't use isLoading it is going to throw an error */\n    if (userProfile.isLoading || tasks.isLoading || projectsData.isLoading || levels.isLoading) return \"Loading...\";\n    // if (userProfile.error) return \"An error has occurred: \" + error.message;\n\n    tasks.data.user[0].progresses.map(path => {\n        let proovime = path.path\n        correctPaths.push(proovime)\n    })\n\n    /* filter out audits */\n    const possiblePaths = projectsData.data.user[0].transactions.map(project => {\n        if (project.object.type === 'module') {\n            middleman.push(project)\n        }\n        return JSON.parse(JSON.stringify(project.path))\n    })\n\n    const filterAudits = removeAudits(correctPaths, possiblePaths);\n    console.log(filterAudits)\n\n    filterAudits.map(project => {\n        totalXP += project.amount\n    })\n\n    return (\n        <div className='profile-info'>\n            <div className='profile-username-div'>\n                <p>{userProfile.data.user[0].login}</p>\n            </div>\n            <div className='profile-current-level-div'>\n                <p>Current level:</p>\n                <p id='current-level'>{levels.data.transaction[0].amount}</p>\n            </div>\n            <div className='profile-xp-amount'>\n\n            </div>\n        </div>\n    )\n}\n\nexport default ProfileInfo\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}