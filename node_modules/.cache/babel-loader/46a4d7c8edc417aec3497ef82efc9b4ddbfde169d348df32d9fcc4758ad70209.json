{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/mannakass/kood/graphql/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4;import{gql}from'graphql-request';/* here I get login=mannakass and id=82 */export var GET_USER=gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    query {\\n        user(where: { id: { _eq: 82 }}) {\\n        id\\n        login\\n        }\\n}\\n\"])));/* here i get :\n    isDone=true\n    all the projects I've finished (including go piscine and all optional tasks)\n    path to each projects (which is the same as in GETDATEANDXP) \n*/export var GET_FINISHED_PROJECTS=gql(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n    query {\\n        user(where: {login: {_eq: \\\"mannakass\\\"}}) {\\n            progresses(\\n              limit: 50\\n              where: {isDone: {_eq: true}, _or: [{object: {type: {_eq: \\\"project\\\"}}}, {object: {type: {_eq: \\\"piscine\\\"}}}]}\\n            ) {\\n              isDone\\n              path\\n              object {\\n                name\\n              }\\n            }\\n        }\\n}\"])));/* here i get: \n    xp for each task\n    path of the task (which is the same as query GETFINISHEDPROJECTS)\n\n    type piscine (excluding go piscine)\n    type exercise (rust piscine tasks and exams (not sure if all of them since limit is 50))\n    type module (250k xp for mentoring)\n\n    date when i recieved the xp (createdAt)\n\n    name of the task\n*/export var GET_DATE_AND_XP=gql(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n    query {\\n      user(where: {login: {_eq: \\\"mannakass\\\"}}) {\\n        transactions(\\n          limit: 50\\n          order_by: {amount: asc_nulls_first}\\n          where: {type: {_eq: \\\"xp\\\"}, object: {type: {_nregex: \\\"exercise|raid\\\"}}}\\n        ) {\\n          amount\\n          path\\n          createdAt\\n          object {\\n            name\\n            type\\n          }\\n        }\\n      }\\n    }\\n\"])));/* here i get current level */export var GET_LEVEL=gql(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n    query {\\n        transaction(\\n        where: {userId: {_eq: 82}, type: {_eq: \\\"level\\\"}, object: {type: {_nregex: \\\"exercise|raid\\\"}}}\\n        limit: 1\\n        offset: 0\\n        order_by: {amount: desc}\\n    )\\n    {\\n        amount\\n    }\\n    }\\n\"])));","map":{"version":3,"names":["gql","GET_USER","GET_FINISHED_PROJECTS","GET_DATE_AND_XP","GET_LEVEL"],"sources":["/home/mannakass/kood/graphql/src/other/queries.js"],"sourcesContent":["import { gql } from 'graphql-request'\n\n/* here I get login=mannakass and id=82 */\nexport const GET_USER = gql`\n    query {\n        user(where: { id: { _eq: 82 }}) {\n        id\n        login\n        }\n}\n`\n\n/* here i get :\n    isDone=true\n    all the projects I've finished (including go piscine and all optional tasks)\n    path to each projects (which is the same as in GETDATEANDXP) \n*/\nexport const GET_FINISHED_PROJECTS = gql`\n    query {\n        user(where: {login: {_eq: \"mannakass\"}}) {\n            progresses(\n              limit: 50\n              where: {isDone: {_eq: true}, _or: [{object: {type: {_eq: \"project\"}}}, {object: {type: {_eq: \"piscine\"}}}]}\n            ) {\n              isDone\n              path\n              object {\n                name\n              }\n            }\n        }\n}`\n\n/* here i get: \n    xp for each task\n    path of the task (which is the same as query GETFINISHEDPROJECTS)\n\n    type piscine (excluding go piscine)\n    type exercise (rust piscine tasks and exams (not sure if all of them since limit is 50))\n    type module (250k xp for mentoring)\n\n    date when i recieved the xp (createdAt)\n\n    name of the task\n*/\nexport const GET_DATE_AND_XP = gql`\n    query {\n      user(where: {login: {_eq: \"mannakass\"}}) {\n        transactions(\n          limit: 50\n          order_by: {amount: asc_nulls_first}\n          where: {type: {_eq: \"xp\"}, object: {type: {_nregex: \"exercise|raid\"}}}\n        ) {\n          amount\n          path\n          createdAt\n          object {\n            name\n            type\n          }\n        }\n      }\n    }\n`\n\n/* here i get current level */\nexport const GET_LEVEL = gql`\n    query {\n        transaction(\n        where: {userId: {_eq: 82}, type: {_eq: \"level\"}, object: {type: {_nregex: \"exercise|raid\"}}}\n        limit: 1\n        offset: 0\n        order_by: {amount: desc}\n    )\n    {\n        amount\n    }\n    }\n`\n"],"mappings":"yMAAA,OAASA,GAAG,KAAQ,iBAAiB,CAErC,0CACA,MAAO,IAAMC,SAAQ,CAAGD,GAAG,oKAO1B,CAED;AACA;AACA;AACA;AACA,EACA,MAAO,IAAME,sBAAqB,CAAGF,GAAG,8cActC,CAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EACA,MAAO,IAAMG,gBAAe,CAAGH,GAAG,2dAkBjC,CAED,8BACA,MAAO,IAAMI,UAAS,CAAGJ,GAAG,qUAY3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}